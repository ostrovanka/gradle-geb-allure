plugins {
   id "idea"
   id "groovy"
   id "com.github.erdi.webdriver-binaries" version "2.2"
   id "com.github.erdi.idea-base" version "2.2"
   id "io.qameta.allure" version "2.8.1"
}

allure {
   version = "2.8.1"
   autoconfigure = true
}

ext {
   // The org.badger.drivers we want to use
   drivers = ["firefox", "chrome", "chromeHeadless", "remoteChrome", "remoteFirefox"]

   gebVersion = '3.4'
   seleniumVersion = '3.141.59'
   allureVersion = '2.8.1'
}

repositories {
   mavenCentral()
   jcenter()
}

allprojects {
   repositories {
      jcenter()
   }
}

subprojects {
   version = '2.0'
   ext{
      allureVersion = '2.8.1'
      gradleVersion = '2.5.6'
   }
}

dependencies {
   //GEB
   testCompile "org.gebish:geb-spock:$gebVersion"
   testCompile("org.spockframework:spock-core:1.3-groovy-2.5") {
      exclude group: "org.codehaus.groovy"
   }
   implementation "org.gebish:geb-junit4:$gebVersion"

   // Drivers
   implementation "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
   implementation "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
   implementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.0.0'

   // Allure
   implementation "io.qameta.allure:allure-junit4:$allureVersion"

   //Internal dependencies
   implementation project(':ast-transformations')

   //Logging
   testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

}

webdriverBinaries {
}


task testParam(type: Test) {
   systemProperties(System.properties)
   def suite = System.getProperty("TESTSUITE") ?: "org/badger/tests"
   include "${suite}/**"
   systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
   systemProperty "geb.env", System.getProperty('TEST_BROWSER', 'chrome')
}


tasks.withType(Test) {
   maxHeapSize = "1g"
   jvmArgs '-XX:MaxMetaspaceSize=128m'
   testLogging {
      testLogging.showStackTraces = true
      testLogging.showStandardStreams = true
      testLogging.events "standardOut", "started", "passed", "skipped", "failed"
      testLogging.exceptionFormat "full"
   }
   maxParallelForks = (System.getProperty("PARALEL_THREADS") ?: 2) as Integer
   forkEvery = 1
   finalizedBy 'allureReport'
}



